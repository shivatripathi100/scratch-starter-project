{"ast":null,"code":"import _objectSpread from\"C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from\"@reduxjs/toolkit\";var spriteStyleSlice=createSlice({name:'spriteStyle',initialState:{sprites:[{spriteId:1,top:80,right:0,left:80,bottom:0,angle:0,isSaying:false}]},reducers:{addSprite:function addSprite(state,action){state.sprites.push({spriteId:action.payload.unique_id,top:30,right:0,left:30,bottom:0,angle:0,isSaying:false});},updateSpriteStyle:function updateSpriteStyle(state,action){var index=state.sprites.findIndex(function(_ref){var id=_ref.id;return id===action.payload.selectedSpriteId;});state.sprites[index].style=_objectSpread(_objectSpread({},state.sprites[index].style),action.payload.modifiedStyle);}}});export var spriteStyleActions=spriteStyleSlice.actions;export default spriteStyleSlice;","map":{"version":3,"names":["createSlice","spriteStyleSlice","name","initialState","sprites","spriteId","top","right","left","bottom","angle","isSaying","reducers","addSprite","state","action","push","payload","unique_id","updateSpriteStyle","index","findIndex","_ref","id","selectedSpriteId","style","_objectSpread","modifiedStyle","spriteStyleActions","actions"],"sources":["C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/src/store/sprite_style_slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst spriteStyleSlice  = createSlice({\n    name:'spriteStyle',\n    initialState:{\n        sprites:[{\n            spriteId:1,\n            top:80,\n            right:0,\n            left:80,\n            bottom:0,\n            angle:0,\n            isSaying:false\n        }\n        ]\n    },\n    reducers:{\n        addSprite(state, action){\n            state.sprites.push({            \n                spriteId:action.payload.unique_id,\n                top:30,\n                right:0,\n                left:30,\n                bottom:0,\n                angle:0,\n                isSaying:false})\n        },\n        updateSpriteStyle(state, action){\n            const index = state.sprites.findIndex(({id}) => id === action.payload.selectedSpriteId )\n            state.sprites[index].style = {...state.sprites[index].style,...action.payload.modifiedStyle}\n        }\n\n    }\n})\n\nexport const spriteStyleActions = spriteStyleSlice.actions;\nexport default spriteStyleSlice;"],"mappings":"+JAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,GAAM,CAAAC,gBAAgB,CAAID,WAAW,CAAC,CAClCE,IAAI,CAAC,aAAa,CAClBC,YAAY,CAAC,CACTC,OAAO,CAAC,CAAC,CACLC,QAAQ,CAAC,CAAC,CACVC,GAAG,CAAC,EAAE,CACNC,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,EAAE,CACPC,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,CAAC,CACPC,QAAQ,CAAC,KACb,CAAC,CAEL,CAAC,CACDC,QAAQ,CAAC,CACLC,SAAS,UAAAA,UAACC,KAAK,CAAEC,MAAM,CAAC,CACpBD,KAAK,CAACV,OAAO,CAACY,IAAI,CAAC,CACfX,QAAQ,CAACU,MAAM,CAACE,OAAO,CAACC,SAAS,CACjCZ,GAAG,CAAC,EAAE,CACNC,KAAK,CAAC,CAAC,CACPC,IAAI,CAAC,EAAE,CACPC,MAAM,CAAC,CAAC,CACRC,KAAK,CAAC,CAAC,CACPC,QAAQ,CAAC,KAAK,CAAC,CAAC,CACxB,CAAC,CACDQ,iBAAiB,UAAAA,kBAACL,KAAK,CAAEC,MAAM,CAAC,CAC5B,GAAM,CAAAK,KAAK,CAAGN,KAAK,CAACV,OAAO,CAACiB,SAAS,CAAC,SAAAC,IAAA,KAAE,CAAAC,EAAE,CAAAD,IAAA,CAAFC,EAAE,OAAM,CAAAA,EAAE,GAAKR,MAAM,CAACE,OAAO,CAACO,gBAAgB,EAAC,CAAC,CACxFV,KAAK,CAACV,OAAO,CAACgB,KAAK,CAAC,CAACK,KAAK,CAAAC,aAAA,CAAAA,aAAA,IAAOZ,KAAK,CAACV,OAAO,CAACgB,KAAK,CAAC,CAACK,KAAK,EAAIV,MAAM,CAACE,OAAO,CAACU,aAAa,CAAC,CAChG,CAEJ,CACJ,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAC,kBAAkB,CAAG3B,gBAAgB,CAAC4B,OAAO,CAC1D,cAAe,CAAA5B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}