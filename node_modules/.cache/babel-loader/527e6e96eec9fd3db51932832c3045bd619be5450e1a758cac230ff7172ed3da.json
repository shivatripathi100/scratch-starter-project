{"ast":null,"code":"import _objectSpread from\"C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Droppable,Draggable}from\"react-beautiful-dnd\";import\"./style.css\";import{useSelector}from\"react-redux\";import{useDispatch}from\"react-redux\";import{spriteActions}from\"../../store/sprite-slice\";import{selectedSpriteActions}from\"../../store/selected_sprite_slice\";import{spriteStyleActions}from\"../../store/sprite_style_slice\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function MidArea(){var dispatch=useDispatch();var selectedSpriteId=useSelector(function(state){return state.selectedStripe.stripeId;});var allStripes=useSelector(function(state){return state.sprite.sprites;});var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentSpriteActions=_useState2[0],setSpriteActions=_useState2[1];var spriteActions;useEffect(function(){spriteActions=allStripes.filter(function(_ref){var spriteId=_ref.spriteId;return spriteId==selectedSpriteId;})[0].actions;setSpriteActions(spriteActions);setSpriteActions(_toConsumableArray(spriteActions));},[selectedSpriteId,allStripes]);spriteActions=useSelector(function(state){return state.sprite.sprites[0].actions;});return/*#__PURE__*/_jsxs(\"div\",{className:\"sprite-div\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"sprite-div-heading\",children:\"Drop actions in the given space\"}),/*#__PURE__*/_jsx(\"div\",{className:\"sprite-action-div\",children:/*#__PURE__*/_jsx(Droppable,{droppableId:\"sprite-list-items\",children:function children(provided){return/*#__PURE__*/_jsxs(\"ul\",_objectSpread(_objectSpread({},provided.droppableProps),{},{ref:provided.innerRef,children:[currentSpriteActions&&currentSpriteActions.map(function(_ref2,index){var id=_ref2.id,title=_ref2.title,menuColor=_ref2.menuColor,action=_ref2.action;return/*#__PURE__*/_jsx(Draggable,{draggableId:\"\".concat(id),index:index,children:function children(provided){return/*#__PURE__*/_jsx(\"li\",_objectSpread(_objectSpread(_objectSpread({ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{className:\"sprite-action-item sprite-action-item-\".concat(menuColor),children:title}));}},id);}),provided.placeholder]}));}})})]});}","map":{"version":3,"names":["React","useEffect","useState","Droppable","Draggable","useSelector","useDispatch","spriteActions","selectedSpriteActions","spriteStyleActions","jsx","_jsx","jsxs","_jsxs","MidArea","dispatch","selectedSpriteId","state","selectedStripe","stripeId","allStripes","sprite","sprites","_useState","_useState2","_slicedToArray","currentSpriteActions","setSpriteActions","filter","_ref","spriteId","actions","_toConsumableArray","className","children","droppableId","provided","_objectSpread","droppableProps","ref","innerRef","map","_ref2","index","id","title","menuColor","action","draggableId","concat","draggableProps","dragHandleProps","placeholder"],"sources":["C:/Users/mdtri/Downloads/MIT-Scratch-clone-main (1)/MIT-Scratch-clone-main/src/components/mid_area.js/MidArea.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport \"./style.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { spriteActions } from \"../../store/sprite-slice\";\nimport { selectedSpriteActions } from \"../../store/selected_sprite_slice\";\nimport { spriteStyleActions } from \"../../store/sprite_style_slice\";\n\nexport default function MidArea() {\n  const dispatch = useDispatch()\n  const selectedSpriteId = useSelector(state => state.selectedStripe.stripeId)\n  const allStripes = useSelector(state => state.sprite.sprites)\n  const [currentSpriteActions, setSpriteActions] = useState([])\n  let spriteActions;\n\n  useEffect(() => {\n   spriteActions= allStripes.filter(({spriteId}) => {\n      return spriteId == selectedSpriteId\n    })[0].actions\n    setSpriteActions(spriteActions)\n    setSpriteActions([...spriteActions])\n\n  },[ selectedSpriteId,allStripes])\n\n  spriteActions = useSelector((state) => state.sprite.sprites[0].actions);\n\n  return (\n    <div className=\"sprite-div\">\n      <h2 className=\"sprite-div-heading\">Drop actions in the given space</h2>\n      <div className=\"sprite-action-div\">\n        <Droppable droppableId=\"sprite-list-items\">\n          {(provided) => (\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\n              {currentSpriteActions && currentSpriteActions.map(({ id, title, menuColor, action }, index) => {\n                return (\n                  <Draggable\n                    key={id}\n                    draggableId={`${id}`}\n                    index={index}\n                  >\n                    {(provided) => (\n                      <li\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className={`sprite-action-item sprite-action-item-${menuColor}`}\n                      >\n                        {title}\n                      </li>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}